{"version":3,"sources":["utils/Usercontext/UserContext.js","components/SignIn/SignIn.js","utils/PollAPI/PollAPI.js","pages/SignIn/SignIn.js","components/SignUp/SignUp.js","pages/SignUp/SignUp.js","components/Menu/Menu.js","components/NavBar/NavBar.js","utils/PollContext/PollContext.js","components/CommentCard/CommentCard.js","components/CommentModal/CommentModal.js","components/Poll/Poll.js","components/PollCard/PollCard.js","components/ExplorePageComp/ExplorePageComp.js","pages/ExplorePage/ExplorePage.js","components/LandingPage/LandingPage.js","pages/LandingPage/LandingPage.js","utils/CreatePollContext/CreatePollContext.js","components/CreatePoll/CreatePoll.js","pages/CreatePoll/CreatePoll.js","utils/DisplayPollContext/DisplayPollContext.js","components/PollComp/PollComp.js","pages/PollPage/PollPage.js","utils/DisplayResultsContext/DisplayResultsContext.js","components/PollResults/PollResults.js","pages/ResultsPage/ResultsPage.js","components/MyPollResults/MyPollResults.js","pages/MyPollsPage/MyPollsPage.js","App.js","serviceWorker.js","index.js","images/Avatar.svg","images/logo.svg","images/votes.svg","images/Right-Chevron.svg","images/compass.svg","images/Poll.svg","images/Create.svg","images/comments.svg","images/mock.png"],"names":["UserContext","createContext","username","email","password","loginError","formValid","intitalLoad","token","polls","errors","handleInputChange","handleFormSubmit","SignInComp","_","useContext","errorStyle","border","Container","Form","onSubmit","Jumbotron","className","fluid","FormGroup","Label","Input","style","type","name","placeholder","value","onChange","Button","onClick","marginTop","display","color","textAlign","href","PollAPI","getNewestPolls","axios","get","getTopPolls","getCategories","category","getUserPolls","id","getOnePoll","createPoll","poll","post","updateOnePoll","values","put","deleteOnePoll","delete","getComments","getPollComments","getOneComment","createComment","comment","deleteOneComment","registerUser","user","loginUser","usernameAvailable","authorize","headers","SignIn","useState","userState","userSetState","e","target","preventDefault","then","data","sessionStorage","setItem","JSON","stringify","catch","console","error","useEffect","res","log","window","location","err","Provider","SignUpComp","errorLabel","fontSize","SignUp","validEmailRegex","RegExp","length","test","valid","Object","forEach","val","response","status","Menu","userInfo","getItem","userAvatar","logout","removeItem","parse","alt","src","avatar","compass","rightChevron","create","NavBar","props","isOpen","setIsOpen","toggle","AppBar","position","logo","IconButton","aria-label","edge","marginBottom","Collapse","updateSearch","PollContext","selectedValue","searchCategory","votedPolls","modalId","modal","pollId","comments","showPoll","showComments","onSelectBox","updatePoll","CommentCard","Array","isArray","slice","reverse","map","key","_id","moment","diff","createdAt","format","CommentModal","classes","makeStyles","theme","root","margin","spacing","width","useStyles","createMuiTheme","palette","primary","deepPurple","secondary","main","pollID","Modal","noValidate","autoComplete","ModalBody","ThemeProvider","TextField","label","variant","Poll","options","option","htmlFor","disabled","localStorage","indexOf","PollCard","setPoll","setComments","commentsSvg","votesSvg","keys","votes","reduce","sum","parseFloat","headline","imageLink","ExplorePageComp","pollState","setPollState","nextSibling","textContent","userId","newComment","document","createElement","classList","innerHTML","querySelector","prepend","commentCount","push","property","localPolls","$inc","result","voutCount","search","a","async","fetchData","ExplorePage","LandingPageComp","to","size","active","mainpic","LandingPage","CreatePollContext","title","urlId","handleAddOption","handleChooseCategory","handleCreatePoll","handleCreateOption","handleToggleDropdown","CreatePollComp","setModal","handleRemoveOption","required","ButtonToolbar","ButtonGroup","i","data-index","event","ModalHeader","ModalFooter","CreatePoll","isDropdownOpen","createPollState","setCreatePollState","dataset","index","splice","DisplayPollContext","viewResults","PollComp","tag","CustomInput","Card","CardImg","top","PollPage","useParams","DisplayPollState","setDisplayPollState","DisplayResultsContext","optionLabels","pollTitle","PollResults","CardHeader","CardBody","CardTitle","Progress","Math","round","isNaN","ResultsPage","resultsState","setResultsState","MyPollResults","handleDeletePoll","setValue","url","origin","text","MyPollsPage","linkValue","copied","confirmAlert","message","buttons","reload","copyLink","App","isAuthenticated","exact","path","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6dbb786f.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst UserContext = createContext({\n  username: '',\n  email: '',\n  password: '',\n  loginError: false,\n  formValid: true,\n  intitalLoad: true,\n  token: '',\n  polls: '',\n  errors: {\n    username: '',\n    email: '',\n    password: ''\n  },\n  handleInputChange: () => { },\n  handleFormSubmit: () => { }\n})\n\nexport default UserContext","import React, { useContext } from 'react'\nimport { Button, Form, FormGroup, Label, Input, Container, Jumbotron } from 'reactstrap'\nimport './SignIn.css'\nimport UserContext from '../../utils/Usercontext'\n\n\nconst SignInComp = _ => {\n  \n  const { username,  password, loginError, handleInputChange, handleFormSubmit } = useContext(UserContext)\n\n  const errorStyle = {\n    border: 'solid 2px #FF647C'\n  }\n\n  const errorLabel = {\n    marginTop: '4px',\n    display: 'block',\n    color: '#FF647C',\n    textAlign: 'center'\n  }\n\n    return (\n        <Container>\n            <Form onSubmit={handleFormSubmit}>\n                <Jumbotron className=\"jumbotron\" fluid>\n                    <Container fluid>\n                        <h2 className=\"colorSet\">Sign In</h2>\n                        <p className=\"lead colorSet\" >Please enter your username and password</p>\n                    </Container>\n                </Jumbotron>\n                <FormGroup>\n                    <Label className=\"colorSet\">Username</Label>\n                    <Input style={loginError ? errorStyle : {border: '0'}} type=\"text\" name=\"username\" placeholder=\"ex. Myusername\" value={username} onChange={handleInputChange}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label className=\"colorSet\">Password</Label>\n                    <Input style={loginError ? errorStyle : {border: '0'}} type=\"password\" name=\"password\" value={password} onChange={handleInputChange} placeholder=\"ex. password123\" />\n                </FormGroup>\n                <Button type=\"submit\" className=\"btn-lg btn-dark btn-block buttonStyles\" onClick={handleFormSubmit}>\n                    Login\n                </Button>\n                <p style={loginError ? errorLabel : {display: 'none'}}>Login Invalid, please try again</p>\n                <br />\n                <br />\n                <div className=\"text-center colorSet\">\n                    <p>Need an account?</p>\n                    <a className=\"bottomLink\" href=\"/signup\">Sign Up</a>\n                    <a href=\"/\">Home</a>\n                </div>\n            </Form>\n        </Container>\n    )\n}\nexport default SignInComp","import axios from 'axios'\n// Change out functions\nconst PollAPI = {\n// Poll Routes\n  getNewestPolls: () => axios.get('/api/polls'),\n  getTopPolls: () => axios.get('/api/top/polls'),\n  getCategories: (category) => axios.get(`/api/polls/${category}`),\n  getUserPolls: (id) => axios.get(`/api/polls/user/${id}`),\n  getOnePoll: (id) => axios.get(`/api/polls/id/${id}`),\n  createPoll: (poll) => axios.post('/api/polls/', poll),\n  updateOnePoll: (id, values) => axios.put(`/api/polls/${id}`, values),\n  deleteOnePoll: (id) => axios.delete(`/api/polls/${id}`),\n  // Comment Routes\n  getComments: () => axios.get('/api/comments/'),\n  getPollComments: (poll) => axios.get(`/api/comments/${poll}`),\n  getOneComment: (id) => axios.get(`/api/comments/${id}`),\n  createComment: (comment) => axios.post('/api/comments/', comment),\n  deleteOneComment: (id) => axios.delete(`/api/comments/${id}`),\n  // User Routes\n  registerUser: (user) => axios.post('/api/register', user),\n  loginUser: (user) => axios.post('/api/login', user),\n  usernameAvailable: (user) => axios.post('/api/username', user),\n  authorize: (token) => axios.post('/api/authorize', {}, {\n    headers: { 'Authorization': 'Bearer ' + token }\n  })\n}\n\nexport default PollAPI","import React, { useState, useEffect } from 'react'\nimport SignInComp from '../../components/SignIn'\nimport UserContext from '../../utils/Usercontext'\nimport PollAPI from '../../utils/PollAPI'\n\nconst { loginUser, authorize } = PollAPI\n\n\nconst SignIn = _ => {\n\n  const [ userState, userSetState ] = useState({\n    username: '',\n    password: '',\n    token: '',\n    loginError: false,\n  })\n\n  userState.handleInputChange = e => {\n    userSetState({...userState, [e.target.name]: e.target.value})\n  }\n\n  userState.handleFormSubmit = e => {\n    e.preventDefault()\n\n    loginUser({username: userState.username, password: userState.password})\n      .then(({data}) => {\n        if (!data) {\n          userSetState({...userState, loginError: true})\n        } else {\n          userSetState({...userState, token: data.token })\n          // Set User info in session storage\n          sessionStorage.setItem('userInfo', JSON.stringify(data))\n        }\n      })\n      .catch(e => {\n        console.error(e)\n      })\n  }\n\n  useEffect(() => {\n    // Check if user is Authorized if token exists\n    if (userState.token !== '') {\n      authorize(userState.token)\n        .then(res => {\n          console.log(res)\n          window.location.href = '/explore'\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    }\n  }, [userState.token])\n\n  return (\n    <UserContext.Provider value={userState}>\n      <SignInComp />\n    </UserContext.Provider>\n  )\n       \n}\nexport default SignIn","import React, { useContext } from 'react'\nimport { Button, Form, FormGroup, Label, Input, Container, Jumbotron } from 'reactstrap'\nimport UserContext from '../../utils/Usercontext'\nimport './SignUp.css'\nconst SignUpComp = _ => {\n\nconst { username, email, password, errors, formValid, handleInputChange, handleFormSubmit } = useContext(UserContext)\n\n\nconst errorStyle = {\n  border: 'solid 2px #FF647C'\n}\n\nconst errorLabel = {\n  display: 'block',\n  color: '#FF647C',\n  fontSize: '12px'\n}\n\n    return (\n      <Container>\n        <Form>\n          <Jumbotron className=\"jumbotron\" fluid>\n            <h2 className=\"colorSet\">Sign Up</h2>\n            <p className=\"lead colorSet\" >Please enter your information below</p>\n          </Jumbotron>\n          <FormGroup>\n            <Label className=\"colorSet\">Username</Label>\n            <Input \n              style={(!formValid && errors.username) ? errorStyle : {border: '0'}}\n              type=\"text\" \n              name=\"username\" \n              value={username} \n              onChange={handleInputChange} \n              placeholder=\"ex. Myusername\" />\n            <p style={(!formValid && errors.username) ? errorLabel : {display: 'none'}}>{errors.username}</p>\n          </FormGroup>\n          <FormGroup>\n            <Label className=\"colorSet\">Email</Label>\n            <Input \n              style={(!formValid && errors.email) ? errorStyle : {border: '0'}} \n              type=\"email\" \n              name=\"email\" \n              value={email} \n              onChange={handleInputChange} \n              placeholder=\"ex. johndoe@gmail.com\" />\n            <p style={(!formValid && errors.email) ? errorLabel : {display: 'none'}}>{errors.email}</p>\n          </FormGroup>\n          <FormGroup>\n            <Label className=\"colorSet\">Password</Label>\n            <Input \n              style={(!formValid && errors.password) ? errorStyle : {border: '0'}} \n              type=\"password\" \n              name=\"password\" \n              value={password} \n              onChange={handleInputChange} \n              placeholder=\"ex. password123\" />\n            <p style={(!formValid && errors.password) ? errorLabel : {display: 'none'}}>{errors.password}</p>\n          </FormGroup>\n          <Button type=\"submit\" className=\"btn-lg btn-dark btn-block buttonStyles\" onClick={handleFormSubmit}>\n              Create Account\n          </Button>\n          <br />\n          <br />\n          <div className=\"text-center colorSet\">\n            <p>Already Have an Account?</p>\n            <a className=\"bottomLink\" href=\"/signin\">Sign In</a>\n            <a href=\"/\">Home</a>\n          </div>\n        </Form>\n      </Container>\n    )\n}\nexport default SignUpComp","import React, { useState, useEffect } from 'react'\nimport SignUpComp from '../../components/SignUp'\nimport UserContext from '../../utils/Usercontext'\nimport PollAPI from '../../utils/PollAPI'\n\nconst { registerUser, usernameAvailable, authorize } = PollAPI\n\nconst SignUp = _ => {\n\n  const [ userState, userSetState ] = useState({\n    username: '',\n    email: '',\n    password: '',\n    formValid: true,\n    token: '',\n    errors: {\n      username: 'Username is required',\n      email: 'Email is required',\n      password: 'Password is required'\n    }\n  })\n\n  userState.handleInputChange = e => {\n    const { name, value } = e.target\n    let errors = userState.errors\n    const validEmailRegex = \n    RegExp(/^[^@\\s]+@[^@\\s.]+\\.[^@.\\s]+$/i)\n\n    // Validation Switch\n    switch (name) {\n      case 'username': \n        errors.username = \n          value.length < 5 ? 'Username must be at least 5 characters' : ''\n        break\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value) ? '' : 'Please use a valid email'\n        break\n      case 'password': \n        errors.password = \n          value.length < 8 ? 'Password must be at least 8 characters' : ''\n        break\n      default:\n        break\n    }\n\n    userSetState({...userState, errors, [e.target.name]: e.target.value})\n  }\n\n  userState.handleFormSubmit = e => {\n    e.preventDefault()\n    \n    // Check if there's errors\n    let valid = true\n    Object.values(userState.errors).forEach( val => val.length > 0 && (valid = false)\n    )\n    // If no errors continue\n    if (valid) {\n      let errors = userState.errors\n\n      // Check if username is available\n      usernameAvailable({username: userState.username})\n        .then(({data}) => {\n          // Clear username errors\n          errors.username = ''\n          userSetState({...userState, errors, formValid: true})\n          // If username isn't taken create user\n          registerUser({username: userState.username, email: userState.email, password: userState.password})\n            .then(({data}) => {\n              userSetState({...userState, token: data.token})\n              // Set User info in session storage\n              sessionStorage.setItem('userInfo', JSON.stringify(data))\n            })\n            .catch(e => console.error(e))\n          }\n        )\n        .catch(err => {\n          if (err.response.status === 409) {\n            errors.username = 'Username is already in use'\n            userSetState({...userState, errors, formValid: false})\n          }\n      })    \n    } else {\n      userSetState({...userState, formValid: false})\n    }\n  }\n\n  useEffect(() => {\n    // Check if user is Authorized if token exists\n    if (userState.token !== '') {\n      authorize(userState.token)\n        .then(res => {\n          console.log(res)\n          window.location.href = '/explore'\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    }\n  }, [userState.token])\n\n  return (\n    <UserContext.Provider value={userState}>\n      <SignUpComp />\n    </UserContext.Provider>\n  )\n       \n}\nexport default SignUp","import React, { useState, useEffect } from 'react'\nimport './Menu.css'\nimport avatar from '../../images/Avatar.svg'\nimport compass from '../../images/compass.svg'\nimport poll from '../../images/Poll.svg'\nimport create from '../../images/Create.svg'\nimport rightChevron from '../../images/Right-Chevron.svg'\nimport { slide as Nav } from 'react-burger-menu'\n\nconst Menu = () => {\n\n  const [ userState, userSetState ] = useState({\n    userInfo: sessionStorage.getItem('userInfo') || '',\n    username: '',\n    email: '',\n    userAvatar: ''\n  })\n\n  userState.logout = () => {\n    sessionStorage.removeItem('userInfo')\n  }\n\n  useEffect(() => {\n    console.log(userState)\n    // Check token session, set initalLoad to false\n    let userInfo = JSON.parse(userState.userInfo)\n    userSetState({...userState,\n      username: userInfo.username,\n      email: userInfo.email,\n      userAvatar: userInfo.userAvatar\n    })\n  }, [userState.userInfo])\n\n  return (\n    <Nav>\n      <div className=\"user-avatar\">\n        <img alt=\"User Avatar\" src={userState.userAvatar ? userState.userAvatar : avatar }/>\n        <div className=\"user-info\">\n          <h4>{userState.username}</h4>\n          <p className=\"email\">{userState.email}</p>\n        </div>\n      </div>\n      <a className=\"menu-item\" href=\"/explore\"><img src={compass} alt=\"Compass icon\"/><h5>Explore</h5><img src={rightChevron} alt=\"right chevron\"/></a>\n      <a className=\"menu-item\" href=\"/mypolls\"><img src={poll} alt=\"Poll icon\"/><h5>My Polls</h5><img src={rightChevron} alt=\"right chevron\"/></a>\n      <a className=\"menu-item\" href=\"/createpoll\"><img src={create} alt=\"Create icon\"/><h5>Create a Poll</h5><img src={rightChevron} alt=\"right chevron\"/></a>\n      <a className=\"logout\" onClick={userState.logout} href=\"/signin\">Logout</a>\n    </Nav>\n  )\n}\n\nexport default Menu","import React, { useState } from 'react'\nimport { Collapse, Button, Container } from 'reactstrap'\nimport { AppBar, IconButton }  from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport logo from '../../images/logo.svg'\nimport Menu from '../Menu'\nimport './NavBar.css'\n\nconst NavBar = (props) => {\n\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = e => {\n    setIsOpen(!isOpen)\n  }\n\n\n  return(\n    <>\n      <AppBar position=\"static\">\n      <Menu/>\n      <img alt=\"logo\" className=\"logo\" src={logo}/>\n      <IconButton aria-label=\"search\" edge=\"end\" onClick={toggle} style={{marginBottom: '1rem'}}>\n        <SearchIcon/>\n      </IconButton>\n      </AppBar>\n      <Collapse isOpen={isOpen}>\n        <Container className=\"buttons\">\n          <div className=\"btnGroup\">\n          <Button onClick={() => {props.updateSearch('Music'); toggle()}} className=\"category\" id=\"Music\">Music</Button>\n          <Button onClick={() => {props.updateSearch('Video Games'); toggle()}} className=\"category\" id=\"Video Games\">Video Games</Button>\n          <Button onClick={() => {props.updateSearch('Sports'); toggle()}} className=\"category\" id=\"Sports\">Sports</Button>\n          <Button onClick={() => {props.updateSearch('Other'); toggle()}} className=\"category\" id=\"Other\">Other</Button>\n          <Button onClick={() => {props.updateSearch('Movies'); toggle()}} className=\"category\" id=\"Movies\">Movies</Button>\n          <Button onClick={() => {props.updateSearch('Food'); toggle()}} className=\"category\" id=\"Food\">Food</Button>\n          </div>\n        </Container>\n      </Collapse>\n      </>\n  )\n}\nexport default NavBar","import { createContext } from 'react'\n\nconst PollContext = createContext({\n  polls: [],\n  selectedValue: '',\n  searchCategory: '',\n  comment: '',\n  votedPolls: [],\n  modalId: '',\n  modal: false,\n  pollId: '',\n  comments: [],\n  poll: '',\n  showPoll: () => { },\n  showComments: () => { },\n  onSelectBox: () => { },\n  createComment: () => { },\n  handleInputChange: () => { },\n  updatePoll: () => { },\n  updateSearch: () => { }\n})\n\nexport default PollContext","import React, { useContext } from 'react'\nimport avatar from '../../images/Avatar.svg'\n//import edit from '../../images/Edit.svg'\nimport moment from 'moment'\nimport PollContext from '../../utils/PollContext'\n\nconst CommentCard = props => {\n\n  //const { comments } = useContext(PollContext)\n\n  return (\n    <div className=\"pollComments\">\n      {Array.isArray(props.value) && props.value.slice(0).reverse().map(comment => (\n        <div key={comment._id} className=\"commentCard\">\n          <div className=\"commentCreated\">\n            <img className=\"commentAvatar\" alt=\"User Avatar\" src={comment.user.avatar ? comment.user.avatar : avatar } />\n            <h5 className=\"commentUsername\">{comment.user.username}</h5>\n            <h6 className=\"commentTimeStamp\">{\n              (moment().diff(moment(comment.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'minutes') > 60 ? (moment().diff(moment(comment.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'hours') > 12 ? moment(comment.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('MM/DD/YYYY hh:mm a') : moment().diff(moment(comment.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'hours') + ' Hours ago') : moment().diff(moment(comment.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'minutes') + ' Minutes ago')\n            }</h6>\n            </div>\n          <h4 className=\"commentCardComment\">{comment.comment}</h4>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default CommentCard","import React, { useContext } from 'react'\nimport { Button, Modal, ModalBody } from 'reactstrap'\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport deepPurple from '@material-ui/core/colors/deepPurple'\nimport TextField from '@material-ui/core/TextField'\nimport PollContext from '../../utils/PollContext'\n\n\nconst CommentModal = () => {\n  \n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: 310,\n      },\n    },\n  }))\n  const classes = useStyles()\n  const theme = createMuiTheme({\n    palette: {\n      primary: deepPurple,\n      secondary: {\n        main: '#f44336',\n      },\n    },\n  })\n  \n  const { modal, toggle, handleInputChange, comment, pollID, createComment } = useContext(PollContext)\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <ModalBody>\n          <ThemeProvider theme={theme}>\n            <p>\n              <TextField id=\"outlined-basic\" label=\"Comment\" name=\"comment\" variant=\"outlined\" onChange={handleInputChange} value={comment} />\n            </p>\n          </ThemeProvider>\n          <Button className=\"post\" id={pollID} type=\"submit\" onClick={(e) => { createComment(e, pollID); toggle(); }}>Post</Button>\n        </ModalBody>\n\n      </form>\n    </Modal>\n  )\n}\n\nexport default CommentModal","import React, { useContext } from 'react'\nimport PollContext from '../../utils/PollContext'\n\nconst Poll = props => {\n\n  const { onSelectBox, updatePoll, votedPolls } = useContext(PollContext)\n  \n  return (\n    <div className=\"poll\">\n      <form>\n        {Array.isArray(props.value.options) && props.value.options.map(option => (\n          <p key={option}>\n            <input type=\"radio\" onClick={onSelectBox} id={option} name={props.value._id} value={option} />\n            <label htmlFor={option}>{option}</label>\n          </p>\n        ))}\n        <button disabled={(localStorage.getItem('polls') && JSON.parse(localStorage.getItem('polls')).indexOf(props.value._id) >= 0) || votedPolls.indexOf(props.value._id) >= 0 ? true : false} id={props.value._id} onClick={updatePoll}>Vote Now</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Poll","import React, { useContext} from 'react'\nimport commentsSvg from '../../images/comments.svg'\nimport votesSvg from '../../images/votes.svg'\nimport avatar from '../../images/Avatar.svg'\nimport moment from 'moment'\nimport CommentCard from '../CommentCard'\nimport CommentModal from '../CommentModal'\nimport Poll from '../Poll'\nimport PollContext from '../../utils/PollContext'\n\n\nconst PollCard = () => {\n\n  const { polls, toggle, showPoll, showComments, setPoll, setComments} = useContext(PollContext)\n\n  // useEffect(() => {\n  //   //setPoll(poll)\n  //   //setComments(poll.comments)\n  // },[])\n\n  return (\n    Array.isArray(polls) && polls.map(poll => (\n      <div key={poll._id} id={'poll-' + poll._id} className=\"pollCard\">\n        <div className=\"pollCreated\">\n          <img className=\"pollAvatar\" alt=\"User Avatar\" src={poll.user.avatar ? poll.user.avatar : avatar} />\n          <h5 className=\"pollUsername\">{poll.user.username}</h5>\n          <h6 className=\"pollTimeStamp\">{\n            (moment().diff(moment(poll.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'minutes') > 60 ? (moment().diff(moment(poll.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'hours') > 12 ? moment(poll.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ').format('MM/DD/YYYY hh:mm a') : moment().diff(moment(poll.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'hours') + ' Hours ago') : moment().diff(moment(poll.createdAt, 'YYYY-MM-DDTHH:mm:ss.SSSZ'), 'minutes') + ' Minutes ago')\n          }</h6>\n        </div>\n        <div>\n          <img alt=\"comments\" onClick={() => toggle(poll._id)} className=\"pollCommentsSvg\" src={commentsSvg} />\n          <CommentModal />\n          <p className=\"pollCommentsCount\">{poll.comments.length}</p>\n          <img alt=\"votes\" className=\"pollVotesSvg\" src={votesSvg} />\n          <p className=\"pollVotesCount\">{Object.keys(poll.votes).reduce((sum, key) => sum + parseFloat(poll.votes[key] || 0), 0)}</p>\n        </div>\n        <div>\n          <h4 className=\"pollTitle\">{poll.headline}</h4>\n          <button className=\"viewPoll\" onClick={showPoll}>View Poll</button>\n          <Poll value={poll}/>\n          {(poll.imageLink !== '' ? <img alt=\"pollImage\" className=\"pollImage\" src={poll.imageLink} /> : null)}\n        </div>\n        <button className=\"viewResults\" onClick={() => { window.location = `/resultspage/${poll.id}` }}>View Results</button>\n        <button className=\"viewComments\" onClick={showComments}>View Comments</button>\n        <CommentCard value={poll.comments} />\n      </div>\n    ))\n  )\n}\n\nexport default PollCard","import React, { useState, useEffect } from 'react'\nimport NavBar from '../NavBar'\nimport PollAPI from '../../utils/PollAPI'\nimport './Explorepage.css'\nimport avatar from '../../images/Avatar.svg'\nimport PollCard from '../PollCard'\nimport PollContext from '../../utils/PollContext'\n\nconst { getNewestPolls, updateOnePoll, getCategories, createComment } = PollAPI\n\nconst ExplorePageComp = _ => {\n  \n  const [pollState, setPollState] = useState({ \n    polls: [],\n    selectedValue: '',\n    searchCategory: '',\n    comment: '',\n    votedPolls: [],\n    modalId: '',\n    modal: false,\n    pollId: '',\n    comments: [],\n    poll: ''\n  })\n\n  pollState.setPoll = poll => {\n    setPollState({...pollState, poll})\n  }\n\n  pollState.setComments = comments => {\n    setPollState({...pollState, comments})\n  }\n  \n  pollState.toggle = modalId => {\n    setPollState({...pollState, modalId})\n    setPollState({...pollState, modal: !pollState.modal})\n  }\n\n  pollState.showPoll = e => {\n    e.target.nextSibling.style.display = e.target.nextSibling.style.display === 'block' ? 'none' : 'block'\n    console.log(e.target)\n    e.target.textContent = e.target.textContent === 'View Poll' ? 'Hide Poll' : 'View Poll'\n  }\n\n  pollState.showComments = e => {\n    e.target.nextSibling.style.display = e.target.nextSibling.style.display === 'block' ? 'none' : 'block'\n    console.log(e.target)\n    e.target.textContent = e.target.textContent === 'View Comments' ? 'Hide Comments' : 'View Comments'\n  }\n\n  pollState.onSelectBox = ({ target }) => {\n    setPollState({ ...pollState, selectedValue: target.value })\n    console.log(target.value)\n  }\n\n  pollState.handleInputChange = e => {\n    setPollState({...pollState, [e.target.name]: e.target.value})\n  }\n\n  //Creates comment and adds it to the comment dispaly, incriments comment counter\n  pollState.createComment = (e, pollId) => {\n    e.preventDefault()\n    createComment({comment: pollState.comment, user: JSON.parse(sessionStorage.getItem('userInfo')).userId, poll: pollId})\n    let newComment = document.createElement('div')\n    newComment.classList = 'commentCard'\n    newComment.innerHTML = `\n    <div class=\"commentCreated\">\n      <img class=\"commentAvatar\" alt=\"User Avatar\" src=${JSON.parse(sessionStorage.getItem('userInfo')).userAvatar ? JSON.parse(sessionStorage.getItem('userInfo')).userAvatar : avatar } />\n      <h5 class=\"commentUsername\">${JSON.parse(sessionStorage.getItem('userInfo')).username}</h5>\n      <h6 class=\"commentTimeStamp\">0 Minutes ago</h6>\n    </div>\n    <h4 class=\"commentCardComment\">${pollState.comment}</h4> `\n    document.querySelector('#poll-'+pollId + ' .pollComments').prepend(newComment)\n    // Incriment Comment Counter\n    let commentCount = (document.querySelector('#poll-'+pollId + ' .pollCommentsCount').textContent)\n    commentCount ++\n    document.querySelector('#poll-'+pollId + ' .pollCommentsCount').textContent = commentCount\n }\n\n  // Adds poll id to local storage, updates poll with new vote , incriments vote counter\n  pollState.updatePoll = e => {\n    e.preventDefault() \n    let votedPolls = pollState.votedPolls\n    votedPolls.push(e.target.id)\n    setPollState({...pollState, votedPolls})\n    let property = `votes.${pollState.selectedValue}`\n    let localPolls = JSON.parse(localStorage.getItem('polls'))\n    console.log(localPolls, e.target.id)\n    localPolls ? localPolls.push(e.target.id) : localPolls = [e.target.id]\n    localStorage.setItem('polls', JSON.stringify(localPolls))\n    updateOnePoll(e.target.id, { $inc: { [property] : 1 }},\n    function(err, result){\n      if(err){\n          console.log(err)\n      }\n    console.log(result)\n    })\n    // Incriments Vote Counter\n    let voutCount = (document.querySelector('#poll-'+e.target.id + ' .pollVotesCount').textContent)\n    voutCount ++\n    document.querySelector('#poll-'+e.target.id + ' .pollVotesCount').textContent = voutCount\n  }\n\n  // Updates search? Honestly have no clue how this works and I wrote it -Dunsterville\n  pollState.updateSearch = search => {\n    console.log('in search')\n    const fetchData = async () => {\n      const result = await getCategories(search)\n      const polls = result.data\n      console.log(polls)\n      setPollState({...pollState, polls})\n    }\n    fetchData()\n  }\n\n  // On load get polls\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getNewestPolls()\n      const polls = result.data\n      console.log(polls)\n      setPollState({...pollState, polls})\n    }\n    fetchData()\n  },[])\n\n\n\n  return(\n    <PollContext.Provider value={pollState}>\n      <NavBar updateSearch={pollState.updateSearch} />\n      <PollCard />\n    </PollContext.Provider>\n  )\n}\nexport default ExplorePageComp\n","import React from 'react'\nimport ExplorePageComp from '../../components/ExplorePageComp'\n\nconst ExplorePage = _ => {\n\n  return(\n      <ExplorePageComp />\n  )\n       \n}\n\nexport default ExplorePage","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport logo from '../../images/logo.svg'\nimport mainpic from '../../images/mock.png'\nimport {Button} from 'reactstrap'\nimport './LandingPage.css'\nconst LandingPageComp = _ => {\n\n\n    return(\n        <>\n        <div className=\"image\">\n        <img src={logo} alt=\"logo\"/>\n        </div>\n        <div className=\"linkContainer\">\n        <Link className=\"links\" to=\"/signin\">\n            <Button className=\"landingBtn signInBtn\" color=\"primary\" size=\"lg\" active>Sign In</Button>\n        </Link>\n        <Link className=\"links\" to=\"/signup\">\n        <Button className=\"landingBtn signUpBtn\" color=\"primary\" size=\"lg\" active>Register</Button>\n        </Link>\n        </div>\n        <div className=\"image2container\">\n        <img className=\"image2\" src={mainpic} alt=\"hero\"/>\n        </div>\n        </>\n        )\n       \n}\nexport default LandingPageComp","import React from 'react'\nimport LandingPageComp from '../../components/LandingPage'\n\n\nconst LandingPage = _ => {\n\n\n    return(\n       <LandingPageComp />\n        )\n       \n}\nexport default LandingPage","import { createContext } from 'react'\n\nconst CreatePollContext = createContext({\n    title: '',\n    category: '',\n    imageLink: '',\n    options: [],\n    votes: [],\n    urlId: '',\n    handleAddOption: () => { },\n    handleInputChange: () => { },\n    handleChooseCategory: () => { },\n    handleCreatePoll: () => { },\n    handleCreateOption: () => { },\n    handleToggleDropdown: () => { }\n})\n\nexport default CreatePollContext \n","import React, { useContext, useState } from 'react'\nimport CreatePollContext from '../../utils/CreatePollContext'\nimport { Button, ButtonGroup, ButtonToolbar, Form, FormGroup, Label, Input, Container, Jumbotron, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\nimport { IoIosBasketball } from 'react-icons/io';\nimport { MdLocalMovies } from 'react-icons/md'\nimport { FaPizzaSlice } from 'react-icons/fa'\nimport { MdVideogameAsset } from 'react-icons/md'\nimport { FaMusic } from 'react-icons/fa'\nimport { FaQuestion } from 'react-icons/fa'\nimport './CreatePoll.css'\n\nconst CreatePollComp = () => {\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n\n  const { title,\n    category,\n    imageLink,\n    options,\n    urlId,\n    handleInputChange,\n    handleChooseCategory,\n    handleCreateOption,\n    handleCreatePoll, handleRemoveOption } = useContext(CreatePollContext)\n\n\n\n\n  return (\n    <>\n      <Container>\n        <Form noValidate>\n          <Jumbotron className=\"jumbotron\" fluid>\n            <Container fluid>\n              <h2 className=\"colorSet\">Create Poll</h2>\n            </Container>\n          </Jumbotron>\n          <FormGroup>\n            <Label className=\"colorSet\">Poll Title</Label>\n            <Input name='title' type=\"title\" placeholder=\"ex. What is the best programming language?\" onChange={handleInputChange} value={title} required />\n          </FormGroup>\n          <FormGroup>\n            <Label className=\"colorSet\">Category</Label>\n\n            <ButtonToolbar>\n              <ButtonGroup>\n                <Button onClick={() => handleChooseCategory('Sports')} className={category === 'Sports' ? 'buttonStylesSelected' : 'buttonStyles'}><IoIosBasketball /></Button>\n                <Button onClick={() => handleChooseCategory('Movies')} className={category === 'Movies' ? 'buttonStylesSelected' : 'buttonStyles'}><MdLocalMovies /></Button>\n                <Button onClick={() => handleChooseCategory('Food')} className={category === 'Food' ? 'buttonStylesSelected' : 'buttonStyles'}><FaPizzaSlice /></Button>\n                <Button onClick={() => handleChooseCategory('Video Games')} className={category === 'Video Games' ? 'buttonStylesSelected' : 'buttonStyles'}><MdVideogameAsset /></Button>\n                <Button onClick={() => handleChooseCategory('Music')} className={category === 'Music' ? 'buttonStylesSelected' : 'buttonStyles'}><FaMusic /></Button>\n                <Button onClick={() => handleChooseCategory('Other')} className={category === 'Other' ? 'buttonStylesSelected' : 'buttonStyles'}><FaQuestion /></Button>\n              </ButtonGroup>\n            </ButtonToolbar>\n          </FormGroup>\n          <Label className=\"colorSet\">Image Link</Label>\n          <Input name=\"imageLink\" type=\"imageLink\" onChange={handleInputChange} value={imageLink} required />\n\n          <br />\n          <br />\n\n          {\n            options.map((option, i) => (\n              <FormGroup>\n                <Label className=\"colorSet\">Option {i + 1}</Label>\n                <Input name=\"options\" data-index={i} type=\"options\" onChange={handleInputChange} value={option} required />\n                {i > 1 ? <Button onClick={() => handleRemoveOption(i)} className=\"buttonStyles removeBtn\">-</Button> : null}\n              </FormGroup>\n            ))\n          }\n          <Button onClick={handleCreateOption} className=\"buttonStyles addBtn\">+ Add Options</Button>\n          <br />\n          <br />\n\n          <Button onClick={event => {\n            handleCreatePoll(event)\n            toggle()\n          }} className=\"btn-lg btn-dark btn-block buttonStyles\">Create Poll</Button>\n        </Form>\n        <br />\n\n        <Modal isOpen={modal} toggle={toggle}>\n          <ModalHeader toggle={toggle}>Poll Link</ModalHeader>\n          <ModalBody>\n            <Button className=\"buttonStyles\" onClick={() => { window.location = `/pollpage/${urlId}` }}>View Poll</Button>\n          </ModalBody>\n          <ModalFooter>\n\n          </ModalFooter>\n        </Modal>\n      </Container>\n    </>\n  )\n\n}\nexport default CreatePollComp","import React, { useState } from 'react'\nimport CreatePollContext from '../../utils/CreatePollContext'\nimport CreatePollComp from '../../components/CreatePoll'\nimport Menu from '../../components/Menu'\nimport PollAPI from '../../utils/PollAPI'\n\nconst {createPoll} = PollAPI\n\nconst CreatePoll = _ => {\n\n    const [createPollState, setCreatePollState] = useState({\n        userInfo: sessionStorage.getItem('userInfo') || '',\n        title: '',\n        imageLink: '',\n        category: '',\n        urlId : '',\n        options: ['',''],\n        votes: [{},{}],\n        isDropdownOpen: false\n    })\n\n    createPollState.handleInputChange = ({ target }) => {\n        if(target.name === 'options'){\n           let options = JSON.parse(JSON.stringify(createPollState.options))\n           options[target.dataset.index] = target.value\n            setCreatePollState({...createPollState, options})\n\n        } else {\n        setCreatePollState({ ...createPollState, [target.name]: target.value })\n        \n    }\n}\n\n    createPollState.handleChooseCategory = category => {\n        setCreatePollState({ ...createPollState, category })\n      \n       \n    }\n\n    createPollState.handleCreatePoll = (event) => {\n         event.preventDefault()\n         const votes = {}\n         for (let i = 0; i < createPollState.options.length; i++) {\n             votes[createPollState.options[i]] = 0\n         }\n        console.log(createPollState)\n        let userInfo = JSON.parse(createPollState.userInfo)\n        console.log(userInfo.userId)\n        createPoll({\n            headline: createPollState.title,\n            category: createPollState.category,\n            options: createPollState.options,\n            imageLink: createPollState.imageLink,\n            votes: votes,\n            user: userInfo.userId\n        })\n        .then(({data}) => {\n            console.log(data)\n            setCreatePollState({...createPollState, urlId : data._id})\n            \n        })\n        .catch(err => {console.log(err)})\n    }\n\n \n    createPollState.handleCreateOption = () => {\n        let options = JSON.parse(JSON.stringify(createPollState.options))\n        options.push('')\n        setCreatePollState({...createPollState, options})\n    }\n\n    createPollState.handleToggleDropdown = () => {\n        setCreatePollState({ ...createPollState, isDropdownOpen: !createPollState.isDropdownOpen })\n    }\n\n    createPollState.handleRemoveOption = index => {\n      let options = JSON.parse(JSON.stringify(createPollState.options))\n      options.splice(index, 1)\n      setCreatePollState({...createPollState, options})\n    }\n\n    return (\n        <CreatePollContext.Provider value={createPollState}>\n            <Menu />\n            <CreatePollComp />\n        </CreatePollContext.Provider>\n    )\n\n}\nexport default CreatePoll","import { createContext } from 'react'\n\nconst DisplayPollContext = createContext({\n    id: '',\n    headline: '',\n    category: '',\n    imageLink: '',\n    options: '',\n    selectedValue: '',\n    votes: '',\n    onSelectBox : () => { },\n    updatePoll : () => {},\n    viewResults : () => {},\n\n})\n\nexport default DisplayPollContext\n","import React, { useContext} from 'react'\nimport DisplayPollContext from '../../utils/DisplayPollContext'\n\nimport { Container, Jumbotron, FormGroup, Button, Card, CardImg , CustomInput} from 'reactstrap'\nimport './PollComp.css'\n\n\n\nconst PollComp = () => {\n\n    \n\n    const {\n        headline,\n        category,\n        imageLink,\n        options,\n        onSelectBox,\n        updatePoll,\n        viewResults\n     } = useContext(DisplayPollContext)\n\n\n  \n\n        return (\n            <Container>\n                <Jumbotron className=\"jumbotron\" fluid>\n                    <Container fluid>\n                        <h2 className=\"colorSet\">{category}</h2>\n                    </Container>\n                </Jumbotron>\n\n                <FormGroup className=\"pollForm\" tag=\"fieldset\">\n                    <legend className=\"pollInput\">{headline}</legend>\n                    <br/>\n                    { \n                        options.map((option, i) => (\n                             <FormGroup>\n                             <div>\n                              <CustomInput type=\"radio\" onClick={onSelectBox} id={i} name=\"radio1\" value={option} label={option} className=\"pollInput\" />\n                            </div>\n                           </FormGroup>\n\n                            ))\n                    }\n\n                    <Card>\n                        <CardImg top width=\"100%\" src={imageLink} alt={category} />\n                    </Card>\n                 \n                    \n                    <br/>\n\n                    <Button onClick={() => { updatePoll()\n                    viewResults()\n                    }} className=\"btn-lg btn-dark btn-block buttonStyles\">Submit</Button>\n                    <br/>\n\n                </FormGroup>\n\n            </Container>\n\n\n        )\n    \n}\nexport default PollComp","import React, { useState, useEffect } from 'react'\nimport PollComp from '../../components/PollComp'\nimport DisplayPollContext from '../../utils/DisplayPollContext'\nimport PollAPI from '../../utils/PollAPI'\nimport { useParams } from 'react-router-dom'\n\n// import { get } from 'mongoose'\n\n\nconst PollPage = _ => {\n\n  let { urlId } = useParams()\n\n  const { updateOnePoll, getOnePoll } = PollAPI\n\n  const [DisplayPollState, setDisplayPollState] = useState({\n    id: '',\n    headline: '',\n    imageLink: '',\n    category: '',\n    options: [],\n    selectedValue: '',\n    votes: {},\n  })\n\n  DisplayPollState.onSelectBox = ({ target }) => {\n    setDisplayPollState({ ...DisplayPollState, selectedValue: target.value })\n    console.log(target.value)\n  }\n\n  DisplayPollState.updatePoll = () => {\n    console.log(DisplayPollState)\n    let property = `votes.${DisplayPollState.selectedValue}`\n    updateOnePoll(DisplayPollState.id, { $inc: { [property]: 1 } },\n      function (err, result) {\n        if (err) {\n          console.log(err)\n        }\n        console.log(result)\n      })\n\n  }\n\n  DisplayPollState.viewResults = () => {\n    console.log(DisplayPollState.id)\n    window.location = `/resultspage/${DisplayPollState.id}`\n  }\n\n  useEffect(() => {\n    console.log(urlId)\n    console.log('Page Loading...')\n    getOnePoll(`${urlId}`)\n      .then(({ data }) => {\n        console.log(data.poll)\n        setDisplayPollState({\n          id: data.poll._id,\n          headline: data.poll.headline,\n          category: data.poll.category,\n          options: data.poll.options,\n          imageLink: data.poll.imageLink,\n          votes: data.poll.votes,\n        })\n\n      })\n      .catch(err => { console.log(err) })\n    // console.log(DisplayPollState)\n  }, [])\n\n  return (\n\n    <DisplayPollContext.Provider value={DisplayPollState}>\n      <PollComp />\n    </DisplayPollContext.Provider>\n  )\n\n}\nexport default PollPage","import { createContext } from 'react'\n\nconst DisplayResultsContext = createContext({\n    optionLabels: [],\n    votes: {},\n    pollTitle: '',\n    \n   \n})\n\nexport default DisplayResultsContext","import React, { useContext } from 'react'\nimport { Container, Card, Button, CardTitle, CardHeader, CardBody, Progress, Label} from 'reactstrap'\nimport DisplayResultsContext from '../../utils/DisplayResultsContext'\nimport './PollResults.css'\n\nconst PollResults = () => {\n\nconst {\n    optionLabels,\n    votes,\n    pollTitle,\n} = useContext(DisplayResultsContext)\n\n\n\n    return (\n\n        <Container>\n            <Card className=\"pollResultCard\">\n                <CardHeader>Poll Results</CardHeader>\n                <CardBody>\n                    <CardTitle><h5>{pollTitle}</h5></CardTitle>\n                    <div>\n                    {\n    \n                        optionLabels.map((option, i) => (\n                            <>\n                            {console.log((votes[option]))}\n                            <div key={option}>\n                            <Label>{option}</Label>\n                            <Progress color=\"white\" data-index={i} value={Math.round((votes[option] / Object.keys(votes).reduce((sum, key) => sum + parseFloat(votes[key] || 0), 0)) * 100)}>{isNaN(Math.round((votes[option] / Object.keys(votes).reduce((sum, key) => sum + parseFloat(votes[key] || 0), 0)) * 100)) ? '' : Math.round((votes[option] / Object.keys(votes).reduce((sum, key) => sum + parseFloat(votes[key] || 0), 0)) * 100) + '%'}</Progress>\n                            <br/>\n                            </div>\n   </>\n                        )) \n\n                        }\n                       \n                   \n                    </div>\n                    <Button className=\"backtoExplore\" onClick={() => {window.location=`/explore`}}>\n                        Explore Page\n                    </Button>\n                </CardBody>\n            </Card>\n\n        </Container>\n\n\n    )\n\n}\n\n\nexport default PollResults","import React, { useState, useEffect } from 'react'\nimport PollResults from '../../components/PollResults'\nimport DisplayResultsContext from '../../utils/DisplayResultsContext'\nimport PollAPI from '../../utils/PollAPI'\nimport { useParams } from 'react-router-dom'\n\nconst ResultsPage = _ => {\n\n  let { urlId } = useParams()\n\n  const { getOnePoll } = PollAPI\n\n  const [resultsState, setResultsState] = useState({\n    optionLabels: [],\n    votes: {},\n    pollTitle: '',\n  })\n\n  useEffect(() => {\n    getOnePoll(`${urlId}`)\n      .then(({ data }) => {\n        console.log(data.poll)\n        setResultsState({\n          id: urlId,\n          optionLabels: data.poll.options,\n          votes: data.poll.votes,\n          pollTitle: data.poll.headline\n        })\n      })\n      .then(() => { console.log(resultsState) })\n      .catch(err => { console.log(err) })\n  }, [])\n\n\n  return (\n\n    <DisplayResultsContext.Provider value={resultsState}>\n      <PollResults />\n    </DisplayResultsContext.Provider>\n\n  )\n\n}\nexport default ResultsPage","import React, { useContext, useState } from 'react'\nimport { Container, Card, Button, CardTitle, CardBody, Progress, Label, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\nimport DisplayResultsContext from '../../utils/DisplayResultsContext'\nimport './PollResults.css'\nimport votesSvg from '../../images/votes.svg'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst MyPollResults = () => {\n\n  const {\n    polls,\n    handleDeletePoll,\n\n\n  } = useContext(DisplayResultsContext)\n\n\n  const [modal, setModal] = useState(false);\n\n  const [value, setValue] = useState('')\n\n\n  const toggle = url => {\n    setValue(url)\n    setModal(!modal)\n  }\n\n\n  return (\n    <Container>\n      {\n        polls.map((poll) => (\n          <>\n            <Card key={poll._id} className=\"pollResultCard\">\n              <CardBody className=\"myPollsCard\">\n                <div>\n                  <img alt=\"votes\" className=\"pollVotesSvg\" src={votesSvg} />\n                  <p className=\"pollVotesCount\">{Object.keys(poll.votes).reduce((sum, key) => sum + parseFloat(poll.votes[key] || 0), 0)}</p>\n                </div>\n                <CardTitle><h5>{poll.headline}</h5></CardTitle>\n                <div className=\"myPollsOptions\">\n                  {\n                    poll.options.map((option, i) => (\n                      <div key={option}>\n                        <Label>{option}</Label>\n                        <Progress color=\"white\" data-index={i} value={Math.round((poll.votes[option] / Object.keys(poll.votes).reduce((sum, key) => sum + parseFloat(poll.votes[key] || 0), 0)) * 100)}>{isNaN(Math.round((poll.votes[option] / Object.keys(poll.votes).reduce((sum, key) => sum + parseFloat(poll.votes[key] || 0), 0)) * 100)) ? '' : Math.round((poll.votes[option] / Object.keys(poll.votes).reduce((sum, key) => sum + parseFloat(poll.votes[key] || 0), 0)) * 100) + '%'}</Progress>\n                        <br />\n                      </div>\n                    ))\n                  }\n                </div>\n                <div className=\"myPollsButtons\">\n                  <Button onClick={() => toggle(window.location.origin + `/pollpage/${poll._id}`)}>Share Poll</Button>\n                  <Button className=\"deleteButton\" onClick={() => handleDeletePoll(poll._id)}>Delete Poll</Button>\n                </div>\n              </CardBody>\n            </Card>\n            <Modal isOpen={modal} toggle={toggle}>\n              <ModalHeader toggle={toggle}>Poll Link</ModalHeader>\n              <ModalBody>\n                <input value={value}></input>\n\n                <CopyToClipboard text={value}>\n                  <button className=\"buttonStyles\">Copy</button>\n                </CopyToClipboard>\n              </ModalBody>\n              <ModalFooter>\n\n              </ModalFooter>\n            </Modal>\n          </>\n        ))\n      }\n    </Container>\n  )\n}\n\nexport default MyPollResults","import React, { useState, useEffect } from 'react'\nimport MyPollResults from '../../components/MyPollResults'\nimport Menu from '../../components/Menu'\nimport DisplayResultsContext from '../../utils/DisplayResultsContext'\nimport PollAPI from '../../utils/PollAPI'\nimport './MyPollsPage.css'\nimport { confirmAlert } from 'react-confirm-alert'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\n\nconst MyPollsPage = _ => {\n\n\n  const { getUserPolls, deleteOnePoll } = PollAPI\n\n  const [resultsState, setResultsState] = useState({\n    polls: [],\n    linkValue: '',\n    copied: false,\n    \n    \n  })\n\n  resultsState.handleDeletePoll = pollId => {\n    confirmAlert({\n      title: 'About to delete your Poll',\n      message: 'Are you sure you want to do this?',\n      buttons: [\n        {\n          label: 'Delete My Poll',\n          onClick: () => {\n            deleteOnePoll(pollId)\n              .then(() => window.location.reload())\n              .catch(err => console.error(err))\n          }\n        },\n        {\n          label: 'No',\n          onClick: () => {}\n        }\n      ]\n    })\n  }\n\n  resultsState.copyLink = () => {\n    \n  }\n\n  useEffect(() => {\n    getUserPolls(JSON.parse(sessionStorage.getItem('userInfo')).userId)\n      .then(({ data }) => {\n        console.log(data)\n        let polls = resultsState.polls\n        data.forEach(poll => {\n          polls.push(poll)\n        })\n        console.log(polls)\n        setResultsState({\n          ...resultsState,\n          polls: polls\n        })\n      })\n      .then(() => { console.log(resultsState) })\n      .catch(err => { console.log(err) })\n  }, [])\n\n\n  return (\n\n    <DisplayResultsContext.Provider value={resultsState}>\n      <div className=\"menuContainer\">\n        <Menu />\n      </div>\n      <h2 className=\"myPollsH2\">My Polls</h2>\n      <MyPollResults />\n    </DisplayResultsContext.Provider>\n\n  )\n\n}\nexport default MyPollsPage","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport SignIn from './pages/SignIn'\nimport SignUp from './pages/SignUp'\nimport Explore from './pages/ExplorePage'\nimport LandingPage from './pages/LandingPage'\nimport CreatePoll from './pages/CreatePoll'\nimport PollPage from './pages/PollPage'\nimport ResultsPage from './pages/ResultsPage'\nimport MyPollsPage from './pages/MyPollsPage'\nimport PollAPI from './utils/PollAPI'\n\nconst { authorize } = PollAPI\n\nconst App = () => {\n\n  //console.log(authorize(JSON.parse(sessionStorage.getItem('userInfo')).token))\n  const isAuthenticated = sessionStorage.getItem('userInfo') ? authorize(JSON.parse(sessionStorage.getItem('userInfo')).token) : false\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <LandingPage />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route exact path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route exact path='/pollpage/:urlId'>\n          <PollPage />\n        </Route>\n        <Route exact path='/resultspage/:urlId'>\n          <ResultsPage />\n        </Route>\n        {\n          isAuthenticated ?\n          <>\n            <Route exact path='/explore'>\n              <Explore />\n            </Route>\n            <Route exact path='/createpoll'>\n              <CreatePoll />\n            </Route>\n            <Route exact path='/mypolls'>\n              <MyPollsPage />\n            </Route>\n          </> : <Redirect to='/signin' />\n        }\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Avatar.5d41767b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.39db00a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/votes.d5316b45.svg\";","module.exports = __webpack_public_path__ + \"static/media/Right-Chevron.224439c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/compass.a159688d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Poll.1e6f5c27.svg\";","module.exports = __webpack_public_path__ + \"static/media/Create.9fdca756.svg\";","module.exports = __webpack_public_path__ + \"static/media/comments.0d6f309b.svg\";","module.exports = __webpack_public_path__ + \"static/media/mock.f03f8224.png\";"],"sourceRoot":""}